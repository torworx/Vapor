Usage: java -jar bootstrap.jar [options...] [properties...] [configs...]

  The bootstrap.jar builds a classpath and executes a main java class with
  a classloader built from that classpath.  By default the bootstrap.jar
  mechanism is configured to bootstrap the vapor server, but it can be 
  configured to bootstrap any java main class.

Command Line Options:
  --help           This help / usage information.
  
  --version        Print the version information for Jetty and
                   dependent jars, then exit.
                   
  --list-options   List the details of each classpath OPTION
  
  --list-config    List the bootstrap.config file.
                                    
  --dry-run        Print the command line that the bootstrap.jar generates,
                   then exit. This may be used to generate command lines
                   when the bootstrap.ini includes -X or -D arguments.
                   
  --exec           Run the generated command line (see --dry-run) in 
                   a sub process. This can be used when bootstrap.ini
                   contains -X or -D arguments, but creates an extra
                   JVM instance.
                     
  --stop           Stop the running Jetty instance.
  
  --daemon         Start in daemon mode with stderr and stdout 
                   redirected to ${vapor.log}/bootstrap.log
  
  --config=<file>  Specify an alternate bootstrap.config file.  
                   The default is the bootstrap.config file inside
                   the bootstrap.jar. The default can also be specified
                   with the START system property.
  
  --ini=<file>     Load command line arguments from a file. If 
                   no --ini options are specified, then the 
                   bootstrap.ini file will be read if it exists in 
                   vapor.home. If specified vapor.home/bootstrap.ini
                   and additional .ini files in vapor.home/bootstrap.d/
                   will NOT be read. A --ini option with no file indicates that
                   bootstrap.ini should not be read.
                   
  --pre=<file>     Specify a configuration file that is to be processed
                   before any configuration files listed in bootstrap.ini

System Properties:
  These are set with a command line like "java -Dname=value ..." and are
  accessible via the java.lang.System#getProperty(String) API.
  Some key system properties are:
  
    org.eclipse.vapor.util.log.class=[class]   
      A Low Level Jetty Logger Implementation to use
      (default: org.eclipse.vapor.util.log.Slf4jLog)
      
    org.eclipse.vapor.util.log.DEBUG=[boolean]
      Debug logging for the stderr and javautil Loggers. Slf4j
      and other loggers must be separately configured for debug.
      (default: false)
      
    org.eclipse.vapor.util.log.IGNORED=[boolean]
      Ignored exceptions are logged, independent of DEBUG settings
      (default: false)

    org.eclipse.vapor.util.log.SOURCE=[boolean]
      The source location of logs is logged in the stderr Logger.
      (default: false)
      
    com.sun.management.jmxremote
      Enable remote JMX management in Sun JVMS.
      
      
Properties:
  These are set with a command line like "java -jar bootstrap.jar name=value"
  and only affect the bootstrap mechanism.  Some of these are defined in the 
  default bootstrap.config and will not be available if another configuration
  file is used. NOTE: Not all properties are listed here:

    path=[directory]
      An additional class path element to add to the started class path. Typically
      this is used to add directories of classes and/or resources
      
    lib=[directory]
      An additional library directory to add to the started class path. This must
      be a (deep) directory of jars
      
    STOP.PORT=[number]
      The port to use to stop the running Jetty server.
      Required along with STOP.KEY if you want to use the --stop option above.
      
    STOP.KEY=[alphanumeric]
      The passphrase defined to stop the server.
      Requried along with STOP.PORT if you want to use the --stop option above.
      
    DEBUG=true
      Enable debug on the bootstrap mechanism and sets the
      org.eclipse.vapor.util.log.stderr.DEBUG system property to true. 
      (default: false)
      
    OPTIONS=[option,option,...]
      Enable classpath OPTIONS. Each options represents one or more jars 
      to be added to the classpath. The options are defined in 
      the bootstrap.config file and can be listed with --help or --list-options.
      By convention, options starting with a capital letter (eg Server) 
      are aggregations of other available options. Available OPTIONS:

        @OPTIONS@


Available Configurations:
  By convention, configuration files are kept in $JETTY_HOME/etc.
  The known configuration files are:
  
    @CONFIGS@


Defaults:
  A bootstrap.ini file may be used to specify default arguments to bootstrap.jar,
  which are used if no command line arguments are provided and override 
  the defaults in the bootstrap.config file. If the directory vapor.home/bootstrap.d
  exists, then multiple *.ini files will be read from that directory in 
  alphabetical order. If --ini options are provided on  the command line,
  then bootstrap.ini and bootstrap.d will NOT be read. 
  
  The current bootstrap.ini arguments are:

    @BOOTSTRAPINI@
